[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "authx"
version = "0.1.0"
description = "AuthX - Comprehensive Authentication and Authorization Service"
authors = [
    {name = "AuthX Team", email = "team@authx.com"},
]
dependencies = [
    "fastapi>=0.104.1",
    "uvicorn[standard]>=0.24.0",
    "sqlalchemy>=2.0.23",
    "alembic>=1.12.1",
    "psycopg2-binary>=2.9.9",
    "asyncpg>=0.29.0",
    "pydantic>=2.5.0",
    "pydantic-settings>=2.1.0",
    "python-jose[cryptography]>=3.3.0",
    "passlib[bcrypt]>=1.7.4",
    "python-multipart>=0.0.6",
    "email-validator>=2.1.0",
    "python-dotenv>=1.0.0",
    "redis>=5.0.0",
    "celery>=5.3.0",
    "pyotp>=2.9.0",
    "qrcode[pil]>=7.4.2",
    "httpx>=0.25.0",
    "pillow>=10.0.0",
    "bcrypt>=4.0.1",
    "itsdangerous>=2.1.0",
    "jinja2>=3.1.6",
    "psutil>=5.9.0",
    "greenlet>=3.2.4",
    # Google APIs for location services
    "googlemaps>=4.10.0",
    "google-api-python-client>=2.108.0",
    "google-auth>=2.23.4",
    "google-auth-oauthlib>=1.1.0",
    "google-auth-httplib2>=0.1.1",
    # Enhanced Email Services
    "aiosmtplib>=3.0.1",
    "premailer>=3.10.0",
    "markdown>=3.5.1",
    "beautifulsoup4>=4.12.2",
    # Monitoring and Metrics
    "prometheus-client>=0.19.0",
    "prometheus-fastapi-instrumentator>=6.1.0",
    "structlog>=23.2.0",
    "loguru>=0.7.2",
    "python-json-logger>=2.0.7",
    # Circuit Breaker and Resilience
    "circuitbreaker>=1.4.0",
    "tenacity>=8.2.3",
    "backoff>=2.2.1",
    # Background Tasks and Scheduling
    "apscheduler>=3.10.4",
    "dramatiq[redis]>=1.14.2",
    # Performance and Caching
    "aioredis>=2.0.1",
    "aiocache>=0.12.2",
    # Security Enhancements
    "cryptography>=41.0.7",
    "argon2-cffi>=23.1.0",
    "python-gnupg>=0.5.1",
    # Data Validation and Serialization
    "marshmallow>=3.20.1",
    "cerberus>=1.3.5",
    # Geographic and Location Services
    "geopy>=2.4.0",
    "geoip2>=4.7.0",
    "geoalchemy2>=0.14.2",
    # File Processing
    "openpyxl>=3.1.2",
    "xlsxwriter>=3.1.9",
    "pypdf2>=3.0.1",
    # API Documentation
    "fastapi-users>=12.1.2",
    "fastapi-pagination>=0.12.12",
    # Testing and Development
    "factory-boy>=3.3.0",
    "faker>=20.1.0",
    "pytest>=8.4.1",
]
requires-python = ">=3.11"

[project.optional-dependencies]
dev = [
    "pytest>=7.4.3",
    "pytest-asyncio>=0.21.1",
    "pytest-cov>=4.1.0",
    "black>=23.11.0",
    "isort>=5.12.0",
    "mypy>=1.7.1",
    "flake8>=6.1.0",
    "pre-commit>=3.6.0",
    "httpx>=0.25.0",
    "pytest-mock>=3.12.0",
    "pytest-xdist>=3.4.0",
]

monitoring = [
    "grafana-api>=1.0.3",
    "elasticsearch>=8.11.0",
    "python-logstash>=0.4.8",
]

production = [
    "gunicorn>=21.2.0",
    "gevent>=23.9.1",
    "newrelic>=9.2.0",
    "sentry-sdk[fastapi]>=1.38.0",
]

[tool.hatch.build.targets.wheel]
packages = ["app"]

[tool.black]
line-length = 100
target-version = ["py311"]
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 100

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "redis.*",
    "celery.*",
    "pyotp.*",
    "qrcode.*",
    "PIL.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short --strict-markers"
markers = [
    "slow: marks tests as slow",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["app"]
omit = [
    "*/tests/*",
    "*/migrations/*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/env/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
]
